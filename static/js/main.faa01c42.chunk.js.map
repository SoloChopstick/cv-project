{"version":3,"sources":["components/contentComponents/TextOutput.js","components/personalComponents/SubmittedPersonalContent.js","components/educationComponents/EducationContent.js","components/educationComponents/SubmittedEdContent.js","components/educationComponents/Education.js","components/workComponents/WorkContent.js","components/workComponents/TaskContent.js","components/workComponents/SubmittedWorkContent.js","components/workComponents/Work.js","components/personalComponents/PersonalContent.js","components/personalComponents/IntroSection.js","components/contentComponents/SectionCard.js","components/MultiForm.js","App.js","serviceWorker.js","index.js"],"names":["TextOutput","props","fieldName","value","SubmittedPersonalContent","className","data","firstName","lastName","phone","email","EducationContent","number","type","name","onChange","handleChange","school","required","placeholder","degree","startDate","endDate","SubmittedEdContent","Education","e","console","log","state","setState","target","this","isSubmitted","React","Component","WorkContent","company","job","onClick","addTask","TaskContent","task","SubmittedWorkContent","Work","prevState","taskCount","tasks","tasksContent","i","push","key","PersonalContent","IntroSection","handleClick","preventDefault","bind","SectionCard","MultiForm","addSchool","educationCount","addWork","workCount","deleteSchool","deleteWork","handleEdit","education","work","educationContent","workContent","App","rel","href","integrity","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faa01c42.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TextOutput(props) {\r\n    return (\r\n        <p> \r\n            {props.fieldName}\r\n            {props.value}\r\n            <br/>\r\n        </p>\r\n    )\r\n}\r\nexport default TextOutput","import React from \"react\"\r\nimport TextOutput from \"../contentComponents/TextOutput\"\r\n\r\nfunction SubmittedPersonalContent (props) {\r\n        /*\r\n        const {education, count} = this.props;\r\n        const output = education.map((item) => console.log(item.state.school))\r\n        for (let i = 0; i < count; i++) {\r\n            bay.push(\r\n        */\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"First Name: \" value={props.data.firstName}/>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Last Name: \" value={props.data.lastName}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Phone: \" value={props.data.phone}/>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Email: \" value={props.data.email}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmittedPersonalContent","import React from \"react\"\r\n\r\nfunction EducationContent(props) {\r\n    return (\r\n        <div>\r\n            <h3>School {props.number} :</h3>\r\n            <form> \r\n                <div className=\"form-row justify-content-center\">\r\n                    <div className=\"col\">\r\n                        <label>School:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"text\" \r\n                            name=\"school\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.school} \r\n                            required \r\n                            placeholder=\"McGill University\"></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label>Degree:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"text\" \r\n                            name=\"degree\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.degree} \r\n                            required \r\n                            placeholder=\"B.Sc. Computer Science\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row justify-content-center\">\r\n                    <div className=\"col\">\r\n                        <label>Start Date:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"date\" \r\n                            name=\"startDate\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.startDate} \r\n                            required></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label>End Date:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"date\" \r\n                            name=\"endDate\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.endDate} \r\n                            required></input>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default EducationContent","import React from \"react\"\r\nimport TextOutput from \"../contentComponents/TextOutput\"\r\n\r\nfunction SubmittedEdContent(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"School: \" value={props.data.school}/>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Degree: \" value={props.data.degree}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Start Date: \" value={props.data.startDate}/>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"End Date: \" value={props.data.endDate}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SubmittedEdContent","import React from \"react\"\r\nimport EducationContent from \"./EducationContent\"\r\nimport SubmittedEdContent from \"./SubmittedEdContent\"\r\n\r\nclass Education extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            school: \"\",\r\n            degree: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        console.log(this.state.school)\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {isSubmitted} = this.props;\r\n\r\n        let content = isSubmitted ? \r\n        <SubmittedEdContent data={this.state} /> : \r\n        (            \r\n        <EducationContent \r\n            data={this.state} \r\n            handleChange={this.handleChange}\r\n            number = {this.props.number}/>\r\n        )\r\n\r\n        return (\r\n            content\r\n        )\r\n    }\r\n}\r\n\r\nexport default Education","import React from \"react\"\r\n\r\nfunction WorkContent(props) {\r\n    return (\r\n        <div>\r\n            <h3>Company {props.number} :</h3>\r\n            <form> \r\n                <div className=\"form-row justify-content-center\">\r\n                    <div className=\"col\">\r\n                        <label>Company:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"text\" \r\n                            name=\"company\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.company} \r\n                            required \r\n                            placeholder=\"Microsoft\"></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label>Job Title:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"text\" \r\n                            name=\"job\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.job} \r\n                            required \r\n                            placeholder=\"Software Engineer\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row justify-content-center\">\r\n                    <div className=\"col\">\r\n                        <label>Start Date:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"date\" \r\n                            name=\"startDate\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.startDate} \r\n                            required></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label>End Date:</label>\r\n                        <input \r\n                            className=\"form-control mb-2\" \r\n                            type=\"date\" \r\n                            name=\"endDate\" \r\n                            onChange={props.handleChange} \r\n                            value={props.data.endDate} \r\n                            required></input>\r\n                    </div>\r\n                </div>\r\n                <input \r\n                    className=\"btn btn-success\" \r\n                    type=\"button\" \r\n                    onClick={props.addTask} \r\n                    value=\"Add Task\"></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default WorkContent","import React from \"react\"\r\nimport TextOutput from \"../contentComponents/TextOutput\"\r\nclass TaskContent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            task: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {isSubmitted, number} = this.props;\r\n        console.log(this.state.task)\r\n        let content = isSubmitted ? \r\n        (\r\n            <div>\r\n                Task {number} : {this.state.task}\r\n            </div>\r\n        ) :\r\n        (            \r\n            <div>\r\n                <form>\r\n                    <label>Task {this.props.number}:</label>\r\n                    <input \r\n                        className=\"form-control mb-2\" \r\n                        type=\"text\" \r\n                        name=\"task\" \r\n                        onChange={this.handleChange} \r\n                        value={this.state.task}>\r\n                    </input>\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            content\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskContent","import React from \"react\"\r\nimport TextOutput from \"../contentComponents/TextOutput\"\r\n\r\nfunction SubmittedWorkContent(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Company: \" value={props.data.company}/>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Job Title: \" value={props.data.job}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"Start Date: \" value={props.data.startDate}/>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                <TextOutput fieldName=\"End Date: \" value={props.data.endDate}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SubmittedWorkContent","import React from \"react\"\r\nimport WorkContent from \"./WorkContent\"\r\nimport TaskContent from \"./TaskContent\"\r\nimport SubmittedWorkContent from \"./SubmittedWorkContent\"\r\n\r\nclass Work extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            company: \"\",\r\n            job: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            tasks: [],\r\n            taskCount: 0,\r\n        }\r\n    }\r\n\r\n    addTask = (e) => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                taskCount: prevState.taskCount + 1\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {isSubmitted} = this.props;\r\n        let tasksContent = [];\r\n        for (let i = 0; i < this.state.taskCount; i++) {\r\n            tasksContent.push(<TaskContent key={i} number={i+1} isSubmitted={isSubmitted}/>)\r\n        }\r\n\r\n        let content = isSubmitted ? \r\n        <div>\r\n            <SubmittedWorkContent data={this.state}/>\r\n            {tasksContent}\r\n        </div>\r\n        : \r\n        (            \r\n        <div>\r\n            <WorkContent \r\n            data={this.state} \r\n            handleChange={this.handleChange}\r\n            number={this.props.number}\r\n            addTask={this.addTask} />\r\n            {tasksContent}\r\n        </div>\r\n        )\r\n\r\n        return ( \r\n            content\r\n        )\r\n    }\r\n}\r\n\r\nexport default Work","import React from \"react\"\r\n\r\nfunction PersonalContent(props) {\r\n    return (\r\n        <form>\r\n            <div className=\"form-row align-items-center justify-content-center\">\r\n                <div className=\"col\">\r\n                    <label>First Name:</label>\r\n                    <input \r\n                        className=\"form-control mb-2\" \r\n                        type=\"text\" \r\n                        name=\"firstName\" \r\n                        onChange={props.handleChange} \r\n                        value={props.data.firstName} \r\n                        required \r\n                        placeholder=\"Han\"></input>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <label>Last Name:</label>\r\n                    <input \r\n                        className=\"form-control mb-2\" \r\n                        type=\"text\" \r\n                        name=\"lastName\" \r\n                        onChange={props.handleChange} \r\n                        value={props.data.lastName} \r\n                        required \r\n                        placeholder=\"Solo\"></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row align-items-center justify-content-center\">\r\n                <div className=\"col\">\r\n                    <label>Phone:</label>\r\n                    <input \r\n                        className=\"form-control mb-2\" \r\n                        type=\"text\" \r\n                        name=\"phone\" \r\n                        onChange={props.handleChange} \r\n                        value={props.data.phone} \r\n                        required \r\n                        placeholder=\"514-777-8888\"></input>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <label>Email:</label>\r\n                    <input \r\n                        className=\"form-control mb-2\" \r\n                        type=\"text\" \r\n                        name=\"email\" \r\n                        onChange={props.handleChange} \r\n                        value={props.data.email} \r\n                        required \r\n                        placeholder=\"han.solo@gmail.com\"></input>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default PersonalContent","import React from \"react\"\r\nimport PersonalContent from \"./PersonalContent\"\r\nimport SubmittedContent from \"./SubmittedPersonalContent\"\r\n\r\nclass IntroSection extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        //prevent refresh everytime pressing submit\r\n        e.preventDefault();\r\n        this.setState({\r\n            isSubmitted: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {isSubmitted} = this.props;\r\n\r\n        let content = isSubmitted ? \r\n        <SubmittedContent data={this.state} /> : \r\n        (            \r\n        <PersonalContent \r\n            data={this.state} \r\n            handleChange={this.handleChange} />\r\n        )\r\n\r\n        return (\r\n            content\r\n        )\r\n    }\r\n}\r\nexport default IntroSection","import React from \"react\"\r\nimport IntroSection from \"../personalComponents/IntroSection\"\r\nimport Education from \"../educationComponents/Education\"\r\nimport Work from \"../workComponents/Work\"\r\n\r\nfunction SectionCard(props) {\r\n    let content = \"\"\r\n    if (props.title === \"PERSONAL INFO\") content=<IntroSection />\r\n    else if (props.title === \"EDUCATION\") content=<Education />\r\n    else if (props.title === \"WORK EXPERIENCE\") content=<Work />\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"p-3 mb-2 bg-dark text-white\">\r\n                <h2>{props.sectionName}</h2>\r\n                <div className=\"card-body\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionCard","import React from \"react\"\r\nimport SubmittedContent from \"./personalComponents/SubmittedPersonalContent\"\r\nimport Education from \"./educationComponents/Education\"\r\nimport Work from \"./workComponents/Work\"\r\nimport IntroSection from \"./personalComponents/IntroSection\"\r\nimport SectionCard from\"./contentComponents/SectionCard\"\r\n\r\nclass MultiForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isSubmitted: false,\r\n            education: [],\r\n            educationCount: 1,\r\n            work: [],\r\n            workCount: 1,\r\n        }\r\n    }\r\n\r\n    addSchool = e => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                educationCount: prevState.educationCount + 1\r\n            })\r\n        })\r\n    }\r\n\r\n    addWork = e => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                workCount: prevState.workCount + 1\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteSchool = e => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                educationCount: prevState.educationCount - 1\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteWork = e => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                workCount: prevState.workCount - 1\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            isSubmitted : true\r\n        })\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        this.setState({\r\n            isSubmitted : false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {isSubmitted, education, work, educationCount, workCount} = this.state;\r\n\r\n        //create the number of desired schools\r\n        let educationContent = [];\r\n        for (let i = 0; i < this.state.educationCount; i++) {\r\n            educationContent.push(<Education key={i} number={i+1} isSubmitted={isSubmitted}/>);\r\n        }\r\n\r\n        //create the number of desired work experiences\r\n        let workContent = [];\r\n        for (let i = 0; i < this.state.workCount; i++) {\r\n            workContent.push(<Work key={i} number={i+1} isSubmitted={isSubmitted}/>);\r\n        }\r\n        //isSubmitted ? <SubmittedContent education={educationContent} count={educationCount}/> :\r\n        let content =\r\n            (            \r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"p-3 mb-2 bg-dark text-white\">\r\n                        <h2> PERSONAL INFO </h2>\r\n                        <div className=\"card-body\">\r\n                            <IntroSection isSubmitted={isSubmitted}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"p-3 mb-2 bg-dark text-white\">\r\n                        <h2> EDUCATION </h2>\r\n                        <div className=\"card-body\">\r\n                            {educationContent}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <input className=\"btn btn-success\" type=\"button\" onClick={this.addSchool} value=\"Add School\"></input>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input className=\"btn btn-danger\" type=\"button\" onClick={this.deleteSchool} value=\"Del School\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"p-3 mb-2 bg-dark text-white\">\r\n                        <h2> WORK EXPERIENCE </h2>\r\n                        <div className=\"card-body\">\r\n                            {workContent}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <input className=\"btn btn-success\" type=\"button\" onClick={this.addWork} value=\"Add Work\"></input>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input className=\"btn btn-danger\" type=\"button\" onClick={this.deleteWork} value=\"Del Work\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    {isSubmitted ? \r\n                    <button className=\"btn btn-warning\" type=\"button\" value=\"Edit\" onClick={this.handleEdit}>EDIT</button>\r\n                    :\r\n                    <input className=\"btn btn-success\" type=\"submit\" onClick={this.handleClick} value=\"SUBMIT\"></input>\r\n                    }\r\n                </div>\r\n\r\n                {/*\r\n                <SectionCard title=\"PERSONAL INFO\"/>\r\n                <SectionCard title=\"EDUCATION\"/>\r\n                <input className=\"btn btn-success\" type=\"button\" onClick={this.addSchool} value=\"Add School\"></input>\r\n                <SectionCard title=\"WORK EXPERIENCE\"/>\r\n                <input className=\"btn btn-success\" type=\"button\" onClick={this.addWork} value=\"Add Section\"></input>\r\n                <input className=\"btn btn-success\" type=\"submit\" onClick={this.handleClick}></input>\r\n                */}\r\n            </div>\r\n            );\r\n        return (\r\n            content\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultiForm;","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport MultiForm from \"./components/MultiForm\"\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      isSubmitted: false,\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      isSubmitted: true\r\n    })\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\"/>\r\n        </header>\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <h1>CV BUILDER</h1>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <MultiForm />\r\n          </div>\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\nCOMPONENTS:\r\n  general info\r\n  education experience\r\n  work experience\r\n\r\nEdit and submit button \r\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}